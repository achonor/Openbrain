//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class BCTweenGroupWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(BCTweenGroup), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("PlayForce", PlayForce);
		L.RegFunction("PlayForceNextFrame", PlayForceNextFrame);
		L.RegFunction("StopAll", StopAll);
		L.RegFunction("StopAllAndReset", StopAllAndReset);
		L.RegFunction("PlayForwardForce", PlayForwardForce);
		L.RegFunction("PlayReverseForce", PlayReverseForce);
		L.RegFunction("PlayForwardNextFrame", PlayForwardNextFrame);
		L.RegFunction("PlayReverseNextFrame", PlayReverseNextFrame);
		L.RegFunction("SetCurrentValueToStart", SetCurrentValueToStart);
		L.RegFunction("SetCurrentValueToEnd", SetCurrentValueToEnd);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("tweenGroup", get_tweenGroup, set_tweenGroup);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayForce(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BCTweenGroup obj = (BCTweenGroup)ToLua.CheckObject<BCTweenGroup>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.PlayForce(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayForceNextFrame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BCTweenGroup obj = (BCTweenGroup)ToLua.CheckObject<BCTweenGroup>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.PlayForceNextFrame(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BCTweenGroup obj = (BCTweenGroup)ToLua.CheckObject<BCTweenGroup>(L, 1);
			obj.StopAll();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopAllAndReset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BCTweenGroup obj = (BCTweenGroup)ToLua.CheckObject<BCTweenGroup>(L, 1);
			obj.StopAllAndReset();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayForwardForce(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BCTweenGroup obj = (BCTweenGroup)ToLua.CheckObject<BCTweenGroup>(L, 1);
			obj.PlayForwardForce();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayReverseForce(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BCTweenGroup obj = (BCTweenGroup)ToLua.CheckObject<BCTweenGroup>(L, 1);
			obj.PlayReverseForce();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayForwardNextFrame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BCTweenGroup obj = (BCTweenGroup)ToLua.CheckObject<BCTweenGroup>(L, 1);
			obj.PlayForwardNextFrame();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayReverseNextFrame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BCTweenGroup obj = (BCTweenGroup)ToLua.CheckObject<BCTweenGroup>(L, 1);
			obj.PlayReverseNextFrame();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCurrentValueToStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BCTweenGroup obj = (BCTweenGroup)ToLua.CheckObject<BCTweenGroup>(L, 1);
			obj.SetCurrentValueToStart();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCurrentValueToEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BCTweenGroup obj = (BCTweenGroup)ToLua.CheckObject<BCTweenGroup>(L, 1);
			obj.SetCurrentValueToEnd();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tweenGroup(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BCTweenGroup obj = (BCTweenGroup)o;
			System.Collections.Generic.List<BCUITweener> ret = obj.tweenGroup;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenGroup on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tweenGroup(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BCTweenGroup obj = (BCTweenGroup)o;
			System.Collections.Generic.List<BCUITweener> arg0 = (System.Collections.Generic.List<BCUITweener>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<BCUITweener>));
			obj.tweenGroup = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenGroup on a nil value");
		}
	}
}

