//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ClientWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Client), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("ConnectNetwork", ConnectNetwork);
		L.RegFunction("Request", Request);
		L.RegFunction("Serialize", Serialize);
		L.RegFunction("Deserialize", Deserialize);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, set_Instance);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConnectNetwork(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Client obj = (Client)ToLua.CheckObject<Client>(L, 1);
				obj.ConnectNetwork();
				return 0;
			}
			else if (count == 2)
			{
				Client obj = (Client)ToLua.CheckObject<Client>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.ConnectNetwork(arg0);
				return 0;
			}
			else if (count == 3)
			{
				Client obj = (Client)ToLua.CheckObject<Client>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				System.Action<bool> arg1 = (System.Action<bool>)ToLua.CheckDelegate<System.Action<bool>>(L, 3);
				obj.ConnectNetwork(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Client.ConnectNetwork");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Request(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				Client obj = (Client)ToLua.CheckObject<Client>(L, 1);
				Google.Protobuf.IMessage arg0 = (Google.Protobuf.IMessage)ToLua.CheckObject<Google.Protobuf.IMessage>(L, 2);
				obj.Request(arg0);
				return 0;
			}
			else if (count == 3)
			{
				Client obj = (Client)ToLua.CheckObject<Client>(L, 1);
				Google.Protobuf.IMessage arg0 = (Google.Protobuf.IMessage)ToLua.CheckObject<Google.Protobuf.IMessage>(L, 2);
				RequestCallback arg1 = (RequestCallback)ToLua.CheckDelegate<RequestCallback>(L, 3);
				obj.Request(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				Client obj = (Client)ToLua.CheckObject<Client>(L, 1);
				Google.Protobuf.IMessage arg0 = (Google.Protobuf.IMessage)ToLua.CheckObject<Google.Protobuf.IMessage>(L, 2);
				RequestCallback arg1 = (RequestCallback)ToLua.CheckDelegate<RequestCallback>(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				obj.Request(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Client.Request");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Serialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Google.Protobuf.IMessage arg0 = (Google.Protobuf.IMessage)ToLua.CheckObject<Google.Protobuf.IMessage>(L, 1);
			byte[] o = Client.Serialize(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Deserialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Google.Protobuf.MessageParser arg0 = (Google.Protobuf.MessageParser)ToLua.CheckObject<Google.Protobuf.MessageParser>(L, 1);
			byte[] arg1 = ToLua.CheckByteBuffer(L, 2);
			Google.Protobuf.IMessage o = Client.Deserialize(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Client.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Instance(IntPtr L)
	{
		try
		{
			Client arg0 = (Client)ToLua.CheckObject<Client>(L, 2);
			Client.Instance = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

