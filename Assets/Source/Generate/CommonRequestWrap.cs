//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class CommonRequestWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(CommonRequest), typeof(System.Object));
		L.RegFunction("ReqLoginGame", ReqLoginGame);
		L.RegFunction("ReqSatrtMatch", ReqSatrtMatch);
		L.RegFunction("ReqSatrtReady", ReqSatrtReady);
		L.RegFunction("ReqSatrtGame", ReqSatrtGame);
		L.RegFunction("New", _CreateCommonRequest);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateCommonRequest(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				CommonRequest obj = new CommonRequest();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: CommonRequest.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReqLoginGame(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				CommonRequest.ReqLoginGame(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				string arg2 = ToLua.CheckString(L, 3);
				CommonRequest.ReqLoginGame(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: CommonRequest.ReqLoginGame");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReqSatrtMatch(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			CommonRequest.ReqSatrtMatch();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReqSatrtReady(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			CommonRequest.ReqSatrtReady();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReqSatrtGame(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				CommonRequest.ReqSatrtGame(arg0);
				return 0;
			}
			else if (count == 2)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				System.Action<rep_message_start_game> arg1 = (System.Action<rep_message_start_game>)ToLua.CheckDelegate<System.Action<rep_message_start_game>>(L, 2);
				CommonRequest.ReqSatrtGame(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: CommonRequest.ReqSatrtGame");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

