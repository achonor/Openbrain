//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PlayBaseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(PlayBase), typeof(UIBase));
		L.RegFunction("StartPlay", StartPlay);
		L.RegFunction("GetPlayID", GetPlayID);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("answerFinish", get_answerFinish, set_answerFinish);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartPlay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PlayBase obj = (PlayBase)ToLua.CheckObject<PlayBase>(L, 1);
			obj.StartPlay();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPlayID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PlayBase obj = (PlayBase)ToLua.CheckObject<PlayBase>(L, 1);
			int o = obj.GetPlayID();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_answerFinish(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PlayBase obj = (PlayBase)o;
			System.Action<bool,int> ret = obj.answerFinish;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index answerFinish on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_answerFinish(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PlayBase obj = (PlayBase)o;
			System.Action<bool,int> arg0 = (System.Action<bool,int>)ToLua.CheckDelegate<System.Action<bool,int>>(L, 2);
			obj.answerFinish = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index answerFinish on a nil value");
		}
	}
}

